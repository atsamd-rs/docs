window.SIDEBAR_ITEMS = {"constant":[["OSC32K_FREQ","The frequency of the 32Khz source."],["OSC48M_FREQ","The frequency of the 48Mhz source."],["OSC8M_FREQ","The frequency of the 8 Mhz source."]],"fn":[["enable_external_32kosc","Turn on the external 32hkz oscillator"],["enable_internal_32kosc","Turn on the internal 32hkz oscillator"]],"struct":[["AcAnaClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["AcDigClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["AdcClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["DacClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["EicClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys0Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys1Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys2Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys3Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys4Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys5Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["GClock","Represents a configured clock generator. Can be converted into the effective clock frequency. Its primary purpose is to be passed in to methods such as `GenericClockController::tcc2_tc3` to configure the clock for a peripheral."],["GenericClockController","`GenericClockController` encapsulates the GCLK hardware. It provides a type safe way to configure the system clocks. Initializing the `GenericClockController` instance configures the system to run at 48Mhz by setting gclk1 as a 32khz source and feeding it into the DFLL48 hardware which in turn drives gclk0 at 48Mhz."],["RtcClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom0CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom1CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom2CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tc1Tc2Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tcc0Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["WdtClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."]],"type":[["ClockGenId",""],["ClockId",""],["ClockSource",""]]};