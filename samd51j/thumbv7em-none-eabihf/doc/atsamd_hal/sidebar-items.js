window.SIDEBAR_ITEMS = {"enum":[["ResetCause","ResetCause represents the reason the MCU was reset."]],"fn":[["reset_cause","Returns the cause of the last reset."],["serial_number","Returns the serial number of the chip as an array of bytes. The serial number is only guaranteed to be unique if all 16 bytes are used."],["split_serial_number","Returns the serial number of the chip as 4 32-bit integers. The serial number is only guaranteed to be unique if all 128 bits are used."]],"macro":[["bsp_peripherals","Helper macro to give meaningful names to peripherals"],["bsp_pins","Helper macro to give meaningful names to GPIO pins"],["dbgprint",""]],"mod":[["adc","Analogue-to-Digital Conversion"],["aes","AES - Advanced Encryption Standard"],["calibration","NVM Software Calibration Area Mapping"],["clock","Clocking API"],["delay","Delays"],["dsu","Device Service Unit"],["eic",""],["gpio","GPIO"],["icm","ICM - Integrity Check Module"],["nvm","Non-volatile Memory Controller"],["prelude","Import the prelude to gain convenient access to helper traits"],["pukcc","Public Key Cryptography Controller (PUKCC)"],["pwm",""],["qspi",""],["rtc","Real-time clock/counter"],["sercom","Configure the SERCOM peripherals"],["sleeping_delay","Delays with WFI sleep while we wait using a timer"],["time","Time units"],["timer","Working with timer counter hardware"],["timer_params","helper struct to calculate divider & cycles settings for timers."],["timer_traits",""],["trng",""],["typelevel","Module supporting type-level programming"],["usb","USB Device support"],["watchdog",""]]};