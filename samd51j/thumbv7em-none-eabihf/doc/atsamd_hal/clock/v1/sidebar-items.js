window.SIDEBAR_ITEMS = {"constant":[["OSC120M_FREQ","The frequency of the 120Mhz source."],["OSC32K_FREQ","The frequency of the 32Khz source."],["OSC48M_FREQ","The frequency of the 48Mhz source."]],"enum":[["ClockId",""]],"struct":[["AcClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Adc0Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Adc1Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["CclClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Cm4TraceClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["DacClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["EicClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys0Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys10Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys11Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys1Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys2Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys3Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys4Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys5Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys6Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys7Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys8Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Evsys9Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["FreqmMsrClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["FreqmRefClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["GClock","Represents a configured clock generator. Can be converted into the effective clock frequency. Its primary purpose is to be passed in to methods such as `GenericClockController::tcc2_tc3` to configure the clock for a peripheral."],["GenericClockController","`GenericClockController` encapsulates the GCLK hardware. It provides a type safe way to configure the system clocks. Initializing the `GenericClockController` instance configures the system to run at 120MHz by taking the DFLL48 and feeding it into the DPLL0 hardware which multiplies the signal by 2.5x."],["I2S0Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["I2S1Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["PdecClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sdhc0Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom0CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom1CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom2CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom3CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom4CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Sercom5CoreClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tc0Tc1Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tc2Tc3Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tc4Tc5Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tcc0Tcc1Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tcc2Tcc3Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["Tcc4Clock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."],["UsbClock","A typed token that indicates that the clock for the peripheral(s) with the matching name has been configured. The effective clock frequency is available via the `freq` method, or by converting the object into a `Hertz` instance. The peripheral initialization code will typically require passing in this object to prove at compile time that the clock has been correctly initialized."]],"type":[["ClockGenId",""],["ClockSource",""]]};